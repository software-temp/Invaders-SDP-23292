# 워크플로우의 이름
name: Java CI for Team Project

# 어떤 이벤트에서 이 워크플로우를 실행할지 정의
on:
  # master 브랜치를 대상으로 하는 Pull Request가 열리거나 업데이트될 때 실행
  pull_request:
    branches: [ master ]

# 실행될 작업(Job)들을 정의
jobs:
  # build-and-test 라는 이름의 Job
  build-and-test:
    # 이 Job을 실행할 가상 머신(Runner)의 운영체제 지정 (Ubuntu 최신 버전)
    runs-on: ubuntu-latest

    # Job 안에서 순차적으로 실행될 단계(Step)들을 정의
    steps:
      # 1. 레포지토리 코드 체크아웃
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. JDK 20 설치
      - name: Set up JDK 20
        uses: actions/setup-java@v4
        with:
          java-version: '20'
          distribution: 'temurin' # Eclipse Temurin 배포판 사용

      # 3. 소스 코드 컴파일
      # src 폴더의 모든 .java 파일을 out/production 폴더로 컴파일
      - name: Compile source code
        run: javac -d out/production $(find src -name "*.java")

      # 4. 테스트 코드 컴파일
      # lib 폴더의 jar 파일과 컴파일된 소스 코드를 클래스패스에 추가하여 테스트 코드를 컴파일
      - name: Compile test code
        run: |
          javac -d out/test \
          -cp "lib/*:out/production" \
          $(find test -name "*.java")

      # 5. JUnit 테스트 실행
      # JUnit Platform Console Standalone을 사용하여 테스트를 실행
      - name: Run JUnit tests
        run: |
          java -jar lib/junit-platform-console-standalone-1.10.2.jar \
          --class-path "out/production:out/test" \
          --scan-class-path